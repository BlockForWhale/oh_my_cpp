目的：使用C++模板设计顺序表的抽象数据类型（ADT）。并在此基础上，使用顺序表ADT的基本操作，设计并实现顺序表的简单算法设计。

内容：（1）请使用模板设计顺序表的抽象数据类型。（由于该环境目前仅支持单文件的编译，故将所有内容都集中在一个源文件内。在实际的设计中，推荐将抽象类及对应的派生类分别放在单独的头文件中。参考网盘中的ADT原型文件。）





（2）ADT的简单应用：使用该ADT设计并实现顺序表应用场合的一些简单算法设计。



应用8：试设计一个算法，找出顺序表A中最大和最小的元素（输出在屏幕上），并保持原顺序表不变。

参考函数原型：

template<class ElemType>
bool Search_Max_Min( SqList<ElemType> &A, ElemType &max, ElemType &min );



输入说明 :

第一行：顺序表A的数据元素的数据类型标记（0：int，1：double，2：char，3：string）

第二行：顺序表A的长度

第三行：顺序表A的数据元素（数据元素之间以空格分隔）



输出说明 :

如第一行输入值为0、1、2、3之外的值，直接输出“err”

否则：



第一行：顺序表A的遍历结果

第二行：最大值max

第三行：最小值min