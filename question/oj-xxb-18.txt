目的：使用C++模板设计顺序表的抽象数据类型（ADT）。并在此基础上，使用顺序表ADT的基本操作，设计并实现顺序表的简单算法设计。

内容：（1）请使用模板设计顺序表的抽象数据类型。（由于该环境目前仅支持单文件的编译，故将所有内容都集中在一个源文件内。在实际的设计中，推荐将抽象类及对应的派生类分别放在单独的头文件中。参考网盘中的ADT原型文件。）





（2）ADT的简单应用：使用该ADT设计并实现顺序表应用场合的一些简单算法设计。



应用7：试设计一个算法，找出有序顺序表A（顺序表A中的数据元素的数据类型为int型）中两个元素和为给定值sum的所有元素对，并保持原有序表不变。

参考函数原型：

template<class ElemType>

void Search_Pairs( SqList<ElemType> &A, int sum )；



输入说明 :

第一行：有序顺序表A的长度

第二行：有序顺序表A的数据元素（数据元素之间以空格分隔）

第三行：给定值sum

输出说明 :

第一行：顺序表A的遍历结果

第二行开始：符合条件的元素对（每一对占一行，数据元素之间以","分割）

              如无符合条件的元素对，输出"NULL"