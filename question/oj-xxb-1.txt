目的：使用C++模板设计顺序表的抽象数据类型（ADT）。并在此基础上，使用顺序表ADT的基本操作，设计并实现顺序表的简单算法设计。

内容：（1）请使用模板设计顺序表的抽象数据类型。（由于该环境目前仅支持单文件的编译，故将所有内容都集中在一个源文件内。在实际的设计中，推荐将抽象类及对应的派生类分别放在单独的头文件中。参考网盘中的ADT原型文件。）


（2）ADT的简单应用：使用该ADT设计并实现顺序表应用场合的一些简单算法设计。


应用1：试设计一个算法，用尽可能少的辅助空间将顺序表中前 m 个元素和后 n 个元素进行互换，即将线性表(a1,a2,…,am,b1,b2,…,bn) 改变成(b1,b2,…,bn,a1,a2,…,am)。

参考函数原型：template
<class ElemType>
    void Exchange( SqList
    <ElemType> &A,int m )；// 本算法实现顺序表中前 m 个元素和后 n 个元素的互换


        输入说明 :

        第一行：待处理顺序表的长度

        第二行：待处理顺序表的数据元素（数据元素之间以空格分隔）

        第三行：逆置位置m


        输出说明 :

        第一行：待处理顺序表的遍历结果

        第二行：逆置结果


        （输入与输出之间以空行分隔）

