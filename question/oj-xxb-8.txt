目的：使用C++模板设计单链表的抽象数据类型（ADT）。并在此基础上，使用单链表ADT的基本操作，设计并实现单链表的简单算法设计。

内容：（1）请使用模板设计单链表的抽象数据类型。（由于该环境目前仅支持单文件的编译，故将所有内容都集中在一个源文件内。在实际的设计中，推荐将抽象类及对应的派生类分别放在单独的头文件中。参考网盘中的ADT原型文件。）



（2）ADT的简单应用：使用该ADT设计并实现单链表应用场合的一些简单算法设计。

应用2：假设线性表A=(a1,a2,...,am)，线性表B=(b1,b2,...,bn)，现要求设计一个算法，使用带头结点的单链表存储结构，将这两个链表连接在一起（即令单链表B的首元结点连在单链表A的尾结点之后），且使用A和B的原存储空间。单链表B不再单独存在。输入中的单链表的长度仅作为建表使用，不得在该算法中利用。

参考函数原型：

template<class ElemType>

void Linklist_Contact( LinkList<ElemType> &A, LinkList<ElemType> &B );





输入说明 :

第一行：单链表A的长度

第二行：单链表A的数据元素（数据元素之间以空格分隔）

第三行：单链表B的长度

第四行：单链表B的数据元素（数据元素之间以空格分隔）



输出说明 :

第一行：单链表A的遍历结果

第二行：单链表B的遍历结果

第三行：连接后单链表A的遍历结果



（输入与输出之间以空行分隔）

