目的：使用C++模板设计单链表的抽象数据类型（ADT）。并在此基础上，使用单链表ADT的基本操作，设计并实现单链表的简单算法设计。

内容：（1）请使用模板设计单链表的抽象数据类型。（由于该环境目前仅支持单文件的编译，故将所有内容都集中在一个源文件内。在实际的设计中，推荐将抽象类及对应的派生类分别放在单独的头文件中。参考网盘中的ADT原型文件。）



（2）ADT的简单应用：使用该ADT设计并实现单链表应用场合的一些简单算法设计。



应用4：假设线性表 A和B，分别由单链表 La和Lb 存储，其中数据元素按值非递减有序排列（即已经有序），现要求设计一个算法，将A和B归并为一个线性表 , 其数据元素仍按值非递减排列。要求使用A和B的原存储空间，且B不再单独存在。输入中的单链表的长度不得在归并算法中利用，仅作为建表使用。

参考函数原型：

template<class ElemType>

void Merge_L_Order( LinkList<ElemType> &A, LinkList<ElemType> &B );



输入说明 :

第一行：单链表A的长度

第二行：单链表A的数据元素（数据元素之间以空格分隔）

第三行：单链表B的长度

第四行：单链表B的数据元素（数据元素之间以空格分隔）



输出说明 :

第一行：单链表A的遍历结果

第二行：单链表B的遍历结果

第三行：归并后单链表A的遍历结果