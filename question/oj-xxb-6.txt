目的：使用C++模板设计顺序表的抽象数据类型（ADT）。并在此基础上，使用顺序表ADT的基本操作，设计并实现顺序表的简单算法设计。

内容：（1）请使用模板设计顺序表的抽象数据类型。（由于该环境目前仅支持单文件的编译，故将所有内容都集中在一个源文件内。在实际的设计中，推荐将抽象类及对应的派生类分别放在单独的头文件中。参考网盘中的ADT原型文件。）





（2）ADT的简单应用：使用该ADT设计并实现顺序表应用场合的一些简单算法设计。



应用6：假设以两个元素依值递增有序排列的线性表A和B分别表示两个集合（即同一表中的元素值各不相同），现要求设计一个算法，另辟空间构成一个线性表C，其元素为A和B中元素的交集，且C中的元素也依值递增有序排列。

参考函数原型：template<class ElemType>

         void Intersect_Sq_OL_C( const SqList<ElemType> &A, const SqList<ElemType> &B, SqList<ElemType> &C )；



输入说明 :

第一行：有序顺序表A的长度

第二行：有序顺序表A的数据元素（数据元素之间以空格分隔）

第三行：有序顺序表B的长度

第四行：有序顺序表B的数据元素（数据元素之间以空格分隔）



输出说明 :

第一行：顺序表A的遍历结果

第二行：顺序表B的遍历结果

第三行：顺序表C的遍历结果